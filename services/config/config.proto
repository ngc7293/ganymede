syntax = "proto3";

package ganymede.services.config;

// Primitive message types
message Config {
    message PompConfig {
        float flow = 1;        // In Liters per Minute
    }

    message SolutionConfig {
        float ph = 1;          // [0-14]
        float ec = 2;          // In ???
        float temperature = 3; // In celsius
    }

    message LightConfig {
        message Color {
            uint32 r = 1;
            uint32 g = 2;
            uint32 b = 3;
        }

        float intensity = 1;   // In ???
        Color color = 2;
    }

    PompConfig     pomp_config     = 10;
    SolutionConfig solution_config = 11;
    LightConfig    light_config    = 12;
}

// Requests and responses
message CreateConfigRequest {
    Config config = 1;
}

message CreateConfigResponse {
    string uid = 1;
}

message GetConfigRequest {
    string uid = 1;
}

message GetConfigResponse {
    string uid = 1;
    Config config = 2;
}

message UpdateConfigRequest {
    string uid = 1;
    Config config = 2;
}

message UpdateConfigResponse {
    string uid = 1;
}

// Service definition
service ConfigService {
    rpc CreateConfig(CreateConfigRequest) returns (CreateConfigResponse);
    rpc GetConfig(GetConfigRequest) returns (GetConfigResponse);
    rpc UpdateConfig(UpdateConfigRequest) returns (UpdateConfigResponse);
}