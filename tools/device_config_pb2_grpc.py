# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import device_config_pb2 as device__config__pb2


class DeviceConfigServiceStub(object):
    """Service definition
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AddDevice = channel.unary_unary(
                '/ganymede.services.device_config.DeviceConfigService/AddDevice',
                request_serializer=device__config__pb2.AddDeviceRequest.SerializeToString,
                response_deserializer=device__config__pb2.Device.FromString,
                )
        self.UpdateDevice = channel.unary_unary(
                '/ganymede.services.device_config.DeviceConfigService/UpdateDevice',
                request_serializer=device__config__pb2.UpdateDeviceRequest.SerializeToString,
                response_deserializer=device__config__pb2.Device.FromString,
                )
        self.GetDevice = channel.unary_unary(
                '/ganymede.services.device_config.DeviceConfigService/GetDevice',
                request_serializer=device__config__pb2.GetDeviceRequest.SerializeToString,
                response_deserializer=device__config__pb2.Device.FromString,
                )
        self.ListDevice = channel.unary_unary(
                '/ganymede.services.device_config.DeviceConfigService/ListDevice',
                request_serializer=device__config__pb2.ListDeviceRequest.SerializeToString,
                response_deserializer=device__config__pb2.ListDeviceResponse.FromString,
                )
        self.RemoveDevice = channel.unary_unary(
                '/ganymede.services.device_config.DeviceConfigService/RemoveDevice',
                request_serializer=device__config__pb2.RemoveDeviceRequest.SerializeToString,
                response_deserializer=device__config__pb2.Empty.FromString,
                )
        self.CreateConfig = channel.unary_unary(
                '/ganymede.services.device_config.DeviceConfigService/CreateConfig',
                request_serializer=device__config__pb2.CreateConfigRequest.SerializeToString,
                response_deserializer=device__config__pb2.Config.FromString,
                )
        self.UpdateConfig = channel.unary_unary(
                '/ganymede.services.device_config.DeviceConfigService/UpdateConfig',
                request_serializer=device__config__pb2.UpdateConfigRequest.SerializeToString,
                response_deserializer=device__config__pb2.Config.FromString,
                )
        self.GetConfig = channel.unary_unary(
                '/ganymede.services.device_config.DeviceConfigService/GetConfig',
                request_serializer=device__config__pb2.GetConfigRequest.SerializeToString,
                response_deserializer=device__config__pb2.Config.FromString,
                )
        self.ListConfig = channel.unary_unary(
                '/ganymede.services.device_config.DeviceConfigService/ListConfig',
                request_serializer=device__config__pb2.ListConfigRequest.SerializeToString,
                response_deserializer=device__config__pb2.ListConfigResponse.FromString,
                )
        self.DeleteConfig = channel.unary_unary(
                '/ganymede.services.device_config.DeviceConfigService/DeleteConfig',
                request_serializer=device__config__pb2.DeleteConfigRequest.SerializeToString,
                response_deserializer=device__config__pb2.Empty.FromString,
                )


class DeviceConfigServiceServicer(object):
    """Service definition
    """

    def AddDevice(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateDevice(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDevice(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListDevice(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveDevice(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateConfig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateConfig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetConfig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListConfig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteConfig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DeviceConfigServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AddDevice': grpc.unary_unary_rpc_method_handler(
                    servicer.AddDevice,
                    request_deserializer=device__config__pb2.AddDeviceRequest.FromString,
                    response_serializer=device__config__pb2.Device.SerializeToString,
            ),
            'UpdateDevice': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateDevice,
                    request_deserializer=device__config__pb2.UpdateDeviceRequest.FromString,
                    response_serializer=device__config__pb2.Device.SerializeToString,
            ),
            'GetDevice': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDevice,
                    request_deserializer=device__config__pb2.GetDeviceRequest.FromString,
                    response_serializer=device__config__pb2.Device.SerializeToString,
            ),
            'ListDevice': grpc.unary_unary_rpc_method_handler(
                    servicer.ListDevice,
                    request_deserializer=device__config__pb2.ListDeviceRequest.FromString,
                    response_serializer=device__config__pb2.ListDeviceResponse.SerializeToString,
            ),
            'RemoveDevice': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveDevice,
                    request_deserializer=device__config__pb2.RemoveDeviceRequest.FromString,
                    response_serializer=device__config__pb2.Empty.SerializeToString,
            ),
            'CreateConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateConfig,
                    request_deserializer=device__config__pb2.CreateConfigRequest.FromString,
                    response_serializer=device__config__pb2.Config.SerializeToString,
            ),
            'UpdateConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateConfig,
                    request_deserializer=device__config__pb2.UpdateConfigRequest.FromString,
                    response_serializer=device__config__pb2.Config.SerializeToString,
            ),
            'GetConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.GetConfig,
                    request_deserializer=device__config__pb2.GetConfigRequest.FromString,
                    response_serializer=device__config__pb2.Config.SerializeToString,
            ),
            'ListConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.ListConfig,
                    request_deserializer=device__config__pb2.ListConfigRequest.FromString,
                    response_serializer=device__config__pb2.ListConfigResponse.SerializeToString,
            ),
            'DeleteConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteConfig,
                    request_deserializer=device__config__pb2.DeleteConfigRequest.FromString,
                    response_serializer=device__config__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ganymede.services.device_config.DeviceConfigService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DeviceConfigService(object):
    """Service definition
    """

    @staticmethod
    def AddDevice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ganymede.services.device_config.DeviceConfigService/AddDevice',
            device__config__pb2.AddDeviceRequest.SerializeToString,
            device__config__pb2.Device.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateDevice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ganymede.services.device_config.DeviceConfigService/UpdateDevice',
            device__config__pb2.UpdateDeviceRequest.SerializeToString,
            device__config__pb2.Device.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDevice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ganymede.services.device_config.DeviceConfigService/GetDevice',
            device__config__pb2.GetDeviceRequest.SerializeToString,
            device__config__pb2.Device.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListDevice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ganymede.services.device_config.DeviceConfigService/ListDevice',
            device__config__pb2.ListDeviceRequest.SerializeToString,
            device__config__pb2.ListDeviceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveDevice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ganymede.services.device_config.DeviceConfigService/RemoveDevice',
            device__config__pb2.RemoveDeviceRequest.SerializeToString,
            device__config__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ganymede.services.device_config.DeviceConfigService/CreateConfig',
            device__config__pb2.CreateConfigRequest.SerializeToString,
            device__config__pb2.Config.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ganymede.services.device_config.DeviceConfigService/UpdateConfig',
            device__config__pb2.UpdateConfigRequest.SerializeToString,
            device__config__pb2.Config.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ganymede.services.device_config.DeviceConfigService/GetConfig',
            device__config__pb2.GetConfigRequest.SerializeToString,
            device__config__pb2.Config.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ganymede.services.device_config.DeviceConfigService/ListConfig',
            device__config__pb2.ListConfigRequest.SerializeToString,
            device__config__pb2.ListConfigResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ganymede.services.device_config.DeviceConfigService/DeleteConfig',
            device__config__pb2.DeleteConfigRequest.SerializeToString,
            device__config__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
