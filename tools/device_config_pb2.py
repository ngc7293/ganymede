# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: device_config.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='device_config.proto',
  package='ganymede.services.device_config',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x13\x64\x65vice_config.proto\x12\x1fganymede.services.device_config\"Y\n\x06\x44\x65vice\x12\x0b\n\x03uid\x18\x01 \x01(\t\x12\x0b\n\x03mac\x18\x02 \x01(\t\x12\x0c\n\x04name\x18\n \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x0b \x01(\t\x12\x12\n\nconfig_uid\x18\x14 \x01(\t\"\xfa\x03\n\x06\x43onfig\x12\x0b\n\x03uid\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12G\n\x0bpomp_config\x18\n \x01(\x0b\x32\x32.ganymede.services.device_config.Config.PompConfig\x12O\n\x0fsolution_config\x18\x0b \x01(\x0b\x32\x36.ganymede.services.device_config.Config.SolutionConfig\x12I\n\x0clight_config\x18\x0c \x01(\x0b\x32\x33.ganymede.services.device_config.Config.LightConfig\x1a\x1a\n\nPompConfig\x12\x0c\n\x04\x66low\x18\x01 \x01(\x02\x1a=\n\x0eSolutionConfig\x12\n\n\x02ph\x18\x01 \x01(\x02\x12\n\n\x02\x65\x63\x18\x02 \x01(\x02\x12\x13\n\x0btemperature\x18\x03 \x01(\x02\x1a\x94\x01\n\x0bLightConfig\x12\x11\n\tintensity\x18\x01 \x01(\x02\x12H\n\x05\x63olor\x18\x02 \x01(\x0b\x32\x39.ganymede.services.device_config.Config.LightConfig.Color\x1a(\n\x05\x43olor\x12\t\n\x01r\x18\x01 \x01(\r\x12\t\n\x01g\x18\x02 \x01(\r\x12\t\n\x01\x62\x18\x03 \x01(\r\"K\n\x10\x41\x64\x64\x44\x65viceRequest\x12\x37\n\x06\x64\x65vice\x18\x01 \x01(\x0b\x32\'.ganymede.services.device_config.Device\"N\n\x13UpdateDeviceRequest\x12\x37\n\x06\x64\x65vice\x18\x01 \x01(\x0b\x32\'.ganymede.services.device_config.Device\"H\n\x10GetDeviceRequest\x12\x14\n\ndevice_uid\x18\x01 \x01(\tH\x00\x12\x14\n\ndevice_mac\x18\x02 \x01(\tH\x00\x42\x08\n\x06\x66ilter\"J\n\x11ListDeviceRequest\x12\x15\n\x0bname_filter\x18\x01 \x01(\tH\x00\x12\x14\n\nconfig_uid\x18\x02 \x01(\tH\x00\x42\x08\n\x06\x66ilter\"N\n\x12ListDeviceResponse\x12\x38\n\x07\x64\x65vices\x18\x01 \x03(\x0b\x32\'.ganymede.services.device_config.Device\"9\n\x13RemoveDeviceRequest\x12\x12\n\ndevice_uid\x18\x01 \x01(\t\x12\x0e\n\x06reason\x18\x02 \x01(\t\"N\n\x13\x43reateConfigRequest\x12\x37\n\x06\x63onfig\x18\x01 \x01(\x0b\x32\'.ganymede.services.device_config.Config\"&\n\x10GetConfigRequest\x12\x12\n\nconfig_uid\x18\x01 \x01(\t\"(\n\x11ListConfigRequest\x12\x13\n\x0bname_filter\x18\x01 \x01(\t\"N\n\x12ListConfigResponse\x12\x38\n\x07\x63onfigs\x18\x01 \x03(\x0b\x32\'.ganymede.services.device_config.Config\"N\n\x13UpdateConfigRequest\x12\x37\n\x06\x63onfig\x18\x01 \x01(\x0b\x32\'.ganymede.services.device_config.Config\"Y\n\x13\x44\x65leteConfigRequest\x12\x12\n\nconfig_uid\x18\x01 \x01(\t\x12\x0e\n\x06reason\x18\x02 \x01(\t\x12\x1e\n\x16replacement_config_uid\x18\x03 \x01(\t\"\x16\n\x14\x44\x65leteConfigResponse\"\x07\n\x05\x45mpty2\xe7\x08\n\x13\x44\x65viceConfigService\x12g\n\tAddDevice\x12\x31.ganymede.services.device_config.AddDeviceRequest\x1a\'.ganymede.services.device_config.Device\x12m\n\x0cUpdateDevice\x12\x34.ganymede.services.device_config.UpdateDeviceRequest\x1a\'.ganymede.services.device_config.Device\x12g\n\tGetDevice\x12\x31.ganymede.services.device_config.GetDeviceRequest\x1a\'.ganymede.services.device_config.Device\x12u\n\nListDevice\x12\x32.ganymede.services.device_config.ListDeviceRequest\x1a\x33.ganymede.services.device_config.ListDeviceResponse\x12l\n\x0cRemoveDevice\x12\x34.ganymede.services.device_config.RemoveDeviceRequest\x1a&.ganymede.services.device_config.Empty\x12m\n\x0c\x43reateConfig\x12\x34.ganymede.services.device_config.CreateConfigRequest\x1a\'.ganymede.services.device_config.Config\x12m\n\x0cUpdateConfig\x12\x34.ganymede.services.device_config.UpdateConfigRequest\x1a\'.ganymede.services.device_config.Config\x12g\n\tGetConfig\x12\x31.ganymede.services.device_config.GetConfigRequest\x1a\'.ganymede.services.device_config.Config\x12u\n\nListConfig\x12\x32.ganymede.services.device_config.ListConfigRequest\x1a\x33.ganymede.services.device_config.ListConfigResponse\x12l\n\x0c\x44\x65leteConfig\x12\x34.ganymede.services.device_config.DeleteConfigRequest\x1a&.ganymede.services.device_config.Emptyb\x06proto3'
)




_DEVICE = _descriptor.Descriptor(
  name='Device',
  full_name='ganymede.services.device_config.Device',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='uid', full_name='ganymede.services.device_config.Device.uid', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='mac', full_name='ganymede.services.device_config.Device.mac', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='name', full_name='ganymede.services.device_config.Device.name', index=2,
      number=10, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='description', full_name='ganymede.services.device_config.Device.description', index=3,
      number=11, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='config_uid', full_name='ganymede.services.device_config.Device.config_uid', index=4,
      number=20, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=56,
  serialized_end=145,
)


_CONFIG_POMPCONFIG = _descriptor.Descriptor(
  name='PompConfig',
  full_name='ganymede.services.device_config.Config.PompConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='flow', full_name='ganymede.services.device_config.Config.PompConfig.flow', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=414,
  serialized_end=440,
)

_CONFIG_SOLUTIONCONFIG = _descriptor.Descriptor(
  name='SolutionConfig',
  full_name='ganymede.services.device_config.Config.SolutionConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='ph', full_name='ganymede.services.device_config.Config.SolutionConfig.ph', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='ec', full_name='ganymede.services.device_config.Config.SolutionConfig.ec', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='temperature', full_name='ganymede.services.device_config.Config.SolutionConfig.temperature', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=442,
  serialized_end=503,
)

_CONFIG_LIGHTCONFIG_COLOR = _descriptor.Descriptor(
  name='Color',
  full_name='ganymede.services.device_config.Config.LightConfig.Color',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='r', full_name='ganymede.services.device_config.Config.LightConfig.Color.r', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='g', full_name='ganymede.services.device_config.Config.LightConfig.Color.g', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='b', full_name='ganymede.services.device_config.Config.LightConfig.Color.b', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=614,
  serialized_end=654,
)

_CONFIG_LIGHTCONFIG = _descriptor.Descriptor(
  name='LightConfig',
  full_name='ganymede.services.device_config.Config.LightConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='intensity', full_name='ganymede.services.device_config.Config.LightConfig.intensity', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='color', full_name='ganymede.services.device_config.Config.LightConfig.color', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_CONFIG_LIGHTCONFIG_COLOR, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=506,
  serialized_end=654,
)

_CONFIG = _descriptor.Descriptor(
  name='Config',
  full_name='ganymede.services.device_config.Config',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='uid', full_name='ganymede.services.device_config.Config.uid', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='name', full_name='ganymede.services.device_config.Config.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='pomp_config', full_name='ganymede.services.device_config.Config.pomp_config', index=2,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='solution_config', full_name='ganymede.services.device_config.Config.solution_config', index=3,
      number=11, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='light_config', full_name='ganymede.services.device_config.Config.light_config', index=4,
      number=12, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_CONFIG_POMPCONFIG, _CONFIG_SOLUTIONCONFIG, _CONFIG_LIGHTCONFIG, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=148,
  serialized_end=654,
)


_ADDDEVICEREQUEST = _descriptor.Descriptor(
  name='AddDeviceRequest',
  full_name='ganymede.services.device_config.AddDeviceRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='device', full_name='ganymede.services.device_config.AddDeviceRequest.device', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=656,
  serialized_end=731,
)


_UPDATEDEVICEREQUEST = _descriptor.Descriptor(
  name='UpdateDeviceRequest',
  full_name='ganymede.services.device_config.UpdateDeviceRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='device', full_name='ganymede.services.device_config.UpdateDeviceRequest.device', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=733,
  serialized_end=811,
)


_GETDEVICEREQUEST = _descriptor.Descriptor(
  name='GetDeviceRequest',
  full_name='ganymede.services.device_config.GetDeviceRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='device_uid', full_name='ganymede.services.device_config.GetDeviceRequest.device_uid', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='device_mac', full_name='ganymede.services.device_config.GetDeviceRequest.device_mac', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='filter', full_name='ganymede.services.device_config.GetDeviceRequest.filter',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=813,
  serialized_end=885,
)


_LISTDEVICEREQUEST = _descriptor.Descriptor(
  name='ListDeviceRequest',
  full_name='ganymede.services.device_config.ListDeviceRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='name_filter', full_name='ganymede.services.device_config.ListDeviceRequest.name_filter', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='config_uid', full_name='ganymede.services.device_config.ListDeviceRequest.config_uid', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='filter', full_name='ganymede.services.device_config.ListDeviceRequest.filter',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=887,
  serialized_end=961,
)


_LISTDEVICERESPONSE = _descriptor.Descriptor(
  name='ListDeviceResponse',
  full_name='ganymede.services.device_config.ListDeviceResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='devices', full_name='ganymede.services.device_config.ListDeviceResponse.devices', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=963,
  serialized_end=1041,
)


_REMOVEDEVICEREQUEST = _descriptor.Descriptor(
  name='RemoveDeviceRequest',
  full_name='ganymede.services.device_config.RemoveDeviceRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='device_uid', full_name='ganymede.services.device_config.RemoveDeviceRequest.device_uid', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='reason', full_name='ganymede.services.device_config.RemoveDeviceRequest.reason', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1043,
  serialized_end=1100,
)


_CREATECONFIGREQUEST = _descriptor.Descriptor(
  name='CreateConfigRequest',
  full_name='ganymede.services.device_config.CreateConfigRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='config', full_name='ganymede.services.device_config.CreateConfigRequest.config', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1102,
  serialized_end=1180,
)


_GETCONFIGREQUEST = _descriptor.Descriptor(
  name='GetConfigRequest',
  full_name='ganymede.services.device_config.GetConfigRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='config_uid', full_name='ganymede.services.device_config.GetConfigRequest.config_uid', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1182,
  serialized_end=1220,
)


_LISTCONFIGREQUEST = _descriptor.Descriptor(
  name='ListConfigRequest',
  full_name='ganymede.services.device_config.ListConfigRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='name_filter', full_name='ganymede.services.device_config.ListConfigRequest.name_filter', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1222,
  serialized_end=1262,
)


_LISTCONFIGRESPONSE = _descriptor.Descriptor(
  name='ListConfigResponse',
  full_name='ganymede.services.device_config.ListConfigResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='configs', full_name='ganymede.services.device_config.ListConfigResponse.configs', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1264,
  serialized_end=1342,
)


_UPDATECONFIGREQUEST = _descriptor.Descriptor(
  name='UpdateConfigRequest',
  full_name='ganymede.services.device_config.UpdateConfigRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='config', full_name='ganymede.services.device_config.UpdateConfigRequest.config', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1344,
  serialized_end=1422,
)


_DELETECONFIGREQUEST = _descriptor.Descriptor(
  name='DeleteConfigRequest',
  full_name='ganymede.services.device_config.DeleteConfigRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='config_uid', full_name='ganymede.services.device_config.DeleteConfigRequest.config_uid', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='reason', full_name='ganymede.services.device_config.DeleteConfigRequest.reason', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='replacement_config_uid', full_name='ganymede.services.device_config.DeleteConfigRequest.replacement_config_uid', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1424,
  serialized_end=1513,
)


_DELETECONFIGRESPONSE = _descriptor.Descriptor(
  name='DeleteConfigResponse',
  full_name='ganymede.services.device_config.DeleteConfigResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1515,
  serialized_end=1537,
)


_EMPTY = _descriptor.Descriptor(
  name='Empty',
  full_name='ganymede.services.device_config.Empty',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1539,
  serialized_end=1546,
)

_CONFIG_POMPCONFIG.containing_type = _CONFIG
_CONFIG_SOLUTIONCONFIG.containing_type = _CONFIG
_CONFIG_LIGHTCONFIG_COLOR.containing_type = _CONFIG_LIGHTCONFIG
_CONFIG_LIGHTCONFIG.fields_by_name['color'].message_type = _CONFIG_LIGHTCONFIG_COLOR
_CONFIG_LIGHTCONFIG.containing_type = _CONFIG
_CONFIG.fields_by_name['pomp_config'].message_type = _CONFIG_POMPCONFIG
_CONFIG.fields_by_name['solution_config'].message_type = _CONFIG_SOLUTIONCONFIG
_CONFIG.fields_by_name['light_config'].message_type = _CONFIG_LIGHTCONFIG
_ADDDEVICEREQUEST.fields_by_name['device'].message_type = _DEVICE
_UPDATEDEVICEREQUEST.fields_by_name['device'].message_type = _DEVICE
_GETDEVICEREQUEST.oneofs_by_name['filter'].fields.append(
  _GETDEVICEREQUEST.fields_by_name['device_uid'])
_GETDEVICEREQUEST.fields_by_name['device_uid'].containing_oneof = _GETDEVICEREQUEST.oneofs_by_name['filter']
_GETDEVICEREQUEST.oneofs_by_name['filter'].fields.append(
  _GETDEVICEREQUEST.fields_by_name['device_mac'])
_GETDEVICEREQUEST.fields_by_name['device_mac'].containing_oneof = _GETDEVICEREQUEST.oneofs_by_name['filter']
_LISTDEVICEREQUEST.oneofs_by_name['filter'].fields.append(
  _LISTDEVICEREQUEST.fields_by_name['name_filter'])
_LISTDEVICEREQUEST.fields_by_name['name_filter'].containing_oneof = _LISTDEVICEREQUEST.oneofs_by_name['filter']
_LISTDEVICEREQUEST.oneofs_by_name['filter'].fields.append(
  _LISTDEVICEREQUEST.fields_by_name['config_uid'])
_LISTDEVICEREQUEST.fields_by_name['config_uid'].containing_oneof = _LISTDEVICEREQUEST.oneofs_by_name['filter']
_LISTDEVICERESPONSE.fields_by_name['devices'].message_type = _DEVICE
_CREATECONFIGREQUEST.fields_by_name['config'].message_type = _CONFIG
_LISTCONFIGRESPONSE.fields_by_name['configs'].message_type = _CONFIG
_UPDATECONFIGREQUEST.fields_by_name['config'].message_type = _CONFIG
DESCRIPTOR.message_types_by_name['Device'] = _DEVICE
DESCRIPTOR.message_types_by_name['Config'] = _CONFIG
DESCRIPTOR.message_types_by_name['AddDeviceRequest'] = _ADDDEVICEREQUEST
DESCRIPTOR.message_types_by_name['UpdateDeviceRequest'] = _UPDATEDEVICEREQUEST
DESCRIPTOR.message_types_by_name['GetDeviceRequest'] = _GETDEVICEREQUEST
DESCRIPTOR.message_types_by_name['ListDeviceRequest'] = _LISTDEVICEREQUEST
DESCRIPTOR.message_types_by_name['ListDeviceResponse'] = _LISTDEVICERESPONSE
DESCRIPTOR.message_types_by_name['RemoveDeviceRequest'] = _REMOVEDEVICEREQUEST
DESCRIPTOR.message_types_by_name['CreateConfigRequest'] = _CREATECONFIGREQUEST
DESCRIPTOR.message_types_by_name['GetConfigRequest'] = _GETCONFIGREQUEST
DESCRIPTOR.message_types_by_name['ListConfigRequest'] = _LISTCONFIGREQUEST
DESCRIPTOR.message_types_by_name['ListConfigResponse'] = _LISTCONFIGRESPONSE
DESCRIPTOR.message_types_by_name['UpdateConfigRequest'] = _UPDATECONFIGREQUEST
DESCRIPTOR.message_types_by_name['DeleteConfigRequest'] = _DELETECONFIGREQUEST
DESCRIPTOR.message_types_by_name['DeleteConfigResponse'] = _DELETECONFIGRESPONSE
DESCRIPTOR.message_types_by_name['Empty'] = _EMPTY
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Device = _reflection.GeneratedProtocolMessageType('Device', (_message.Message,), {
  'DESCRIPTOR' : _DEVICE,
  '__module__' : 'device_config_pb2'
  # @@protoc_insertion_point(class_scope:ganymede.services.device_config.Device)
  })
_sym_db.RegisterMessage(Device)

Config = _reflection.GeneratedProtocolMessageType('Config', (_message.Message,), {

  'PompConfig' : _reflection.GeneratedProtocolMessageType('PompConfig', (_message.Message,), {
    'DESCRIPTOR' : _CONFIG_POMPCONFIG,
    '__module__' : 'device_config_pb2'
    # @@protoc_insertion_point(class_scope:ganymede.services.device_config.Config.PompConfig)
    })
  ,

  'SolutionConfig' : _reflection.GeneratedProtocolMessageType('SolutionConfig', (_message.Message,), {
    'DESCRIPTOR' : _CONFIG_SOLUTIONCONFIG,
    '__module__' : 'device_config_pb2'
    # @@protoc_insertion_point(class_scope:ganymede.services.device_config.Config.SolutionConfig)
    })
  ,

  'LightConfig' : _reflection.GeneratedProtocolMessageType('LightConfig', (_message.Message,), {

    'Color' : _reflection.GeneratedProtocolMessageType('Color', (_message.Message,), {
      'DESCRIPTOR' : _CONFIG_LIGHTCONFIG_COLOR,
      '__module__' : 'device_config_pb2'
      # @@protoc_insertion_point(class_scope:ganymede.services.device_config.Config.LightConfig.Color)
      })
    ,
    'DESCRIPTOR' : _CONFIG_LIGHTCONFIG,
    '__module__' : 'device_config_pb2'
    # @@protoc_insertion_point(class_scope:ganymede.services.device_config.Config.LightConfig)
    })
  ,
  'DESCRIPTOR' : _CONFIG,
  '__module__' : 'device_config_pb2'
  # @@protoc_insertion_point(class_scope:ganymede.services.device_config.Config)
  })
_sym_db.RegisterMessage(Config)
_sym_db.RegisterMessage(Config.PompConfig)
_sym_db.RegisterMessage(Config.SolutionConfig)
_sym_db.RegisterMessage(Config.LightConfig)
_sym_db.RegisterMessage(Config.LightConfig.Color)

AddDeviceRequest = _reflection.GeneratedProtocolMessageType('AddDeviceRequest', (_message.Message,), {
  'DESCRIPTOR' : _ADDDEVICEREQUEST,
  '__module__' : 'device_config_pb2'
  # @@protoc_insertion_point(class_scope:ganymede.services.device_config.AddDeviceRequest)
  })
_sym_db.RegisterMessage(AddDeviceRequest)

UpdateDeviceRequest = _reflection.GeneratedProtocolMessageType('UpdateDeviceRequest', (_message.Message,), {
  'DESCRIPTOR' : _UPDATEDEVICEREQUEST,
  '__module__' : 'device_config_pb2'
  # @@protoc_insertion_point(class_scope:ganymede.services.device_config.UpdateDeviceRequest)
  })
_sym_db.RegisterMessage(UpdateDeviceRequest)

GetDeviceRequest = _reflection.GeneratedProtocolMessageType('GetDeviceRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETDEVICEREQUEST,
  '__module__' : 'device_config_pb2'
  # @@protoc_insertion_point(class_scope:ganymede.services.device_config.GetDeviceRequest)
  })
_sym_db.RegisterMessage(GetDeviceRequest)

ListDeviceRequest = _reflection.GeneratedProtocolMessageType('ListDeviceRequest', (_message.Message,), {
  'DESCRIPTOR' : _LISTDEVICEREQUEST,
  '__module__' : 'device_config_pb2'
  # @@protoc_insertion_point(class_scope:ganymede.services.device_config.ListDeviceRequest)
  })
_sym_db.RegisterMessage(ListDeviceRequest)

ListDeviceResponse = _reflection.GeneratedProtocolMessageType('ListDeviceResponse', (_message.Message,), {
  'DESCRIPTOR' : _LISTDEVICERESPONSE,
  '__module__' : 'device_config_pb2'
  # @@protoc_insertion_point(class_scope:ganymede.services.device_config.ListDeviceResponse)
  })
_sym_db.RegisterMessage(ListDeviceResponse)

RemoveDeviceRequest = _reflection.GeneratedProtocolMessageType('RemoveDeviceRequest', (_message.Message,), {
  'DESCRIPTOR' : _REMOVEDEVICEREQUEST,
  '__module__' : 'device_config_pb2'
  # @@protoc_insertion_point(class_scope:ganymede.services.device_config.RemoveDeviceRequest)
  })
_sym_db.RegisterMessage(RemoveDeviceRequest)

CreateConfigRequest = _reflection.GeneratedProtocolMessageType('CreateConfigRequest', (_message.Message,), {
  'DESCRIPTOR' : _CREATECONFIGREQUEST,
  '__module__' : 'device_config_pb2'
  # @@protoc_insertion_point(class_scope:ganymede.services.device_config.CreateConfigRequest)
  })
_sym_db.RegisterMessage(CreateConfigRequest)

GetConfigRequest = _reflection.GeneratedProtocolMessageType('GetConfigRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETCONFIGREQUEST,
  '__module__' : 'device_config_pb2'
  # @@protoc_insertion_point(class_scope:ganymede.services.device_config.GetConfigRequest)
  })
_sym_db.RegisterMessage(GetConfigRequest)

ListConfigRequest = _reflection.GeneratedProtocolMessageType('ListConfigRequest', (_message.Message,), {
  'DESCRIPTOR' : _LISTCONFIGREQUEST,
  '__module__' : 'device_config_pb2'
  # @@protoc_insertion_point(class_scope:ganymede.services.device_config.ListConfigRequest)
  })
_sym_db.RegisterMessage(ListConfigRequest)

ListConfigResponse = _reflection.GeneratedProtocolMessageType('ListConfigResponse', (_message.Message,), {
  'DESCRIPTOR' : _LISTCONFIGRESPONSE,
  '__module__' : 'device_config_pb2'
  # @@protoc_insertion_point(class_scope:ganymede.services.device_config.ListConfigResponse)
  })
_sym_db.RegisterMessage(ListConfigResponse)

UpdateConfigRequest = _reflection.GeneratedProtocolMessageType('UpdateConfigRequest', (_message.Message,), {
  'DESCRIPTOR' : _UPDATECONFIGREQUEST,
  '__module__' : 'device_config_pb2'
  # @@protoc_insertion_point(class_scope:ganymede.services.device_config.UpdateConfigRequest)
  })
_sym_db.RegisterMessage(UpdateConfigRequest)

DeleteConfigRequest = _reflection.GeneratedProtocolMessageType('DeleteConfigRequest', (_message.Message,), {
  'DESCRIPTOR' : _DELETECONFIGREQUEST,
  '__module__' : 'device_config_pb2'
  # @@protoc_insertion_point(class_scope:ganymede.services.device_config.DeleteConfigRequest)
  })
_sym_db.RegisterMessage(DeleteConfigRequest)

DeleteConfigResponse = _reflection.GeneratedProtocolMessageType('DeleteConfigResponse', (_message.Message,), {
  'DESCRIPTOR' : _DELETECONFIGRESPONSE,
  '__module__' : 'device_config_pb2'
  # @@protoc_insertion_point(class_scope:ganymede.services.device_config.DeleteConfigResponse)
  })
_sym_db.RegisterMessage(DeleteConfigResponse)

Empty = _reflection.GeneratedProtocolMessageType('Empty', (_message.Message,), {
  'DESCRIPTOR' : _EMPTY,
  '__module__' : 'device_config_pb2'
  # @@protoc_insertion_point(class_scope:ganymede.services.device_config.Empty)
  })
_sym_db.RegisterMessage(Empty)



_DEVICECONFIGSERVICE = _descriptor.ServiceDescriptor(
  name='DeviceConfigService',
  full_name='ganymede.services.device_config.DeviceConfigService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=1549,
  serialized_end=2676,
  methods=[
  _descriptor.MethodDescriptor(
    name='AddDevice',
    full_name='ganymede.services.device_config.DeviceConfigService.AddDevice',
    index=0,
    containing_service=None,
    input_type=_ADDDEVICEREQUEST,
    output_type=_DEVICE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='UpdateDevice',
    full_name='ganymede.services.device_config.DeviceConfigService.UpdateDevice',
    index=1,
    containing_service=None,
    input_type=_UPDATEDEVICEREQUEST,
    output_type=_DEVICE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetDevice',
    full_name='ganymede.services.device_config.DeviceConfigService.GetDevice',
    index=2,
    containing_service=None,
    input_type=_GETDEVICEREQUEST,
    output_type=_DEVICE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='ListDevice',
    full_name='ganymede.services.device_config.DeviceConfigService.ListDevice',
    index=3,
    containing_service=None,
    input_type=_LISTDEVICEREQUEST,
    output_type=_LISTDEVICERESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='RemoveDevice',
    full_name='ganymede.services.device_config.DeviceConfigService.RemoveDevice',
    index=4,
    containing_service=None,
    input_type=_REMOVEDEVICEREQUEST,
    output_type=_EMPTY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='CreateConfig',
    full_name='ganymede.services.device_config.DeviceConfigService.CreateConfig',
    index=5,
    containing_service=None,
    input_type=_CREATECONFIGREQUEST,
    output_type=_CONFIG,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='UpdateConfig',
    full_name='ganymede.services.device_config.DeviceConfigService.UpdateConfig',
    index=6,
    containing_service=None,
    input_type=_UPDATECONFIGREQUEST,
    output_type=_CONFIG,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetConfig',
    full_name='ganymede.services.device_config.DeviceConfigService.GetConfig',
    index=7,
    containing_service=None,
    input_type=_GETCONFIGREQUEST,
    output_type=_CONFIG,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='ListConfig',
    full_name='ganymede.services.device_config.DeviceConfigService.ListConfig',
    index=8,
    containing_service=None,
    input_type=_LISTCONFIGREQUEST,
    output_type=_LISTCONFIGRESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='DeleteConfig',
    full_name='ganymede.services.device_config.DeviceConfigService.DeleteConfig',
    index=9,
    containing_service=None,
    input_type=_DELETECONFIGREQUEST,
    output_type=_EMPTY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_DEVICECONFIGSERVICE)

DESCRIPTOR.services_by_name['DeviceConfigService'] = _DEVICECONFIGSERVICE

# @@protoc_insertion_point(module_scope)
