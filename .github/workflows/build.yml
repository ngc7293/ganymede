name: Build

on: push

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
        with:
          submodules: true

      - name: Install tools
        run: sudo apt-get install g++-11 gcc-11 ninja-build

      - name: Install Conan
        run: |
          pip install conan
          conan config set general.revisions_enabled=1
          conan remote add davidbourgault https://artifactory.davidbourgault.ca/artifactory/api/conan/conan
          conan user -p ${{ secrets.CONAN_PASSWORD }} -r davidbourgault david

      - name: Create directories
        run: mkdir build

      - name: Install Third Parties
        working-directory: build
        env:
          CC: gcc-11
          CXX: g++-11
        run: conan install .. --update --build=missing --setting compiler.version=11 --setting compiler.libcxx=libstdc++11 --setting build_type=Release --remote=davidbourgault

      - name: Upload
        run: conan upload '*' --remote davidbourgault --all --confirm

      - name: Configure
        working-directory: build
        env:
          CC: gcc-11
          CXX: g++-11
        run: cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr

      - name: Build
        working-directory: build
        env:
          CC: gcc-11
          CXX: g++-11
        run: cmake --build . --config Release --parallel 2

      - name: Create MongoDB container
        run: |
          docker pull mongo:focal
          docker run -d -p 27017:27017/tcp mongo:focal

      - name: Test
        working-directory: build
        run: ctest --rerun-failed --output-on-failure

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        working-directory: build
        run: cmake --build . --target ganymede.services.device.docker

      - name: Push
        run: docker push --all-tags ghcr.io/ngc7293/ganymede/device.service

  validate-style:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: Run clang-format
        working-directory: src
        run: find -name "*.cc" -or -name "*.hh" | xargs clang-format --dry-run --style=file -Werror