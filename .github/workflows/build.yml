name: Build

on: push

jobs:
  validate-style:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v3.3.0

      - name: Run clang-format
        working-directory: src
        run: find -name "*.cc" -or -name "*.hh" | xargs clang-format --dry-run --style=file -Werror

  build-local:
    needs: validate-style

    container:
      image: ghcr.io/ngc7293/cxxci:jammy

    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3.3.0
        with:
          submodules: true

      - name: Install Conan
        run: |
          conan config set general.revisions_enabled=1
          conan remote add davidbourgault https://artifactory.davidbourgault.ca/artifactory/api/conan/conan
          conan user -p ${{ secrets.CONAN_PASSWORD }} -r davidbourgault david

      - name: Create directories
        run: mkdir build

      - name: Install Third Parties
        working-directory: build
        env:
          CC: gcc-12
          CXX: g++-12
        run: conan install .. --update --build=missing --settings compiler.version=12 --settings compiler.libcxx=libstdc++11 --settings build_type=Release --remote=davidbourgault

      - name: Upload
        run: conan upload '*' --remote davidbourgault --all --confirm

      - name: Configure
        working-directory: build
        env:
          CC: gcc-12
          CXX: g++-12
        run: cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr

      - name: Build
        working-directory: build
        env:
          CC: gcc-12
          CXX: g++-12
        run: cmake --build . --config Release --parallel 2

      - name: Create MongoDB container
        run: |
          docker pull mongo:latest
          docker run -d -p 27017:27017/tcp mongo:latest
          sleep 10

      - name: Test
        working-directory: build
        run: ctest --rerun-failed --output-on-failure

  build-docker:
    runs-on: ubuntu-22.04

    needs: build-local
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout
        uses: actions/checkout@v3.3.0
        with:
          submodules: true

      - name: Build Docker image
        working-directory: build
        run: cmake --build . --target ganymede.services.device.docker

      - name: Push
        run: docker push --all-tags ghcr.io/ngc7293/ganymede/device.service
