syntax = "proto3";

package ganymede.services.device;

// Service definition
service DeviceService {
    rpc AddDevice(AddDeviceRequest) returns (Device);
    rpc UpdateDevice(UpdateDeviceRequest) returns (Device);
    rpc GetDevice(GetDeviceRequest) returns (Device);
    rpc ListDevice(ListDeviceRequest) returns (ListDeviceResponse);
    rpc RemoveDevice(RemoveDeviceRequest) returns (Empty);

    rpc CreateConfig(CreateConfigRequest) returns (Config);
    rpc UpdateConfig(UpdateConfigRequest) returns (Config);
    rpc GetConfig(GetConfigRequest) returns (Config);
    rpc ListConfig(ListConfigRequest) returns (ListConfigResponse);
    rpc DeleteConfig(DeleteConfigRequest) returns (Empty);
}

// Requests and responses
message AddDeviceRequest {
    Device device = 1;
}

message UpdateDeviceRequest {
    Device device = 1;
}

message GetDeviceRequest {
    oneof filter {
        string device_uid = 1;
        string device_mac = 2;
    }
}

message ListDeviceRequest {
    oneof filter {
        string name_filter = 1;
        string config_uid = 2;
    }
}

message ListDeviceResponse {
    repeated Device devices = 1;
}

message RemoveDeviceRequest {
    string device_uid = 1;
    string reason = 2;
}

message CreateConfigRequest {
    Config config = 1;
}

message GetConfigRequest {
    string config_uid = 1;
}

message ListConfigRequest {
    string name_filter = 1;
}

message ListConfigResponse {
    repeated Config configs = 1;
}

message UpdateConfigRequest {
    Config config = 1;
}

message DeleteConfigRequest {
    string config_uid = 1;
    string reason = 2;

    string replacement_config_uid = 3;
}

message DeleteConfigResponse {

}

message Empty { }

// Primitive message types
message Device {
    string uid = 1;
    string mac = 2;

    string name = 10;
    string description = 11;

    string config_uid = 20;
}

message Time {
    uint32 hour = 1;
    uint32 minute = 2;
    uint32 second = 3;
}

message PompConfig {
    float flow = 1;        // In Liters per Minute
}

message SolutionConfig {
    float ph = 1;          // [0-14]
    float ec = 2;          // In ???
    float temperature = 3; // In celsius
}


message Luminaire {
    message DailySchedule {
        Time start = 1;
        Time stop = 2;
    
        uint32 intensity = 3; // 0-255. If use_pwm is false, any non-zero value will be interpreted as "fully-on"
    }

    uint32 port = 1;
    bool use_pwm = 2;

    repeated DailySchedule photo_period = 3;
}

message LightConfig {
    repeated Luminaire luminaires = 1;
}

message Config {
    string uid = 1;
    string display_name = 2;
    string timezone = 3;

    PompConfig     pomp_config     = 10;
    SolutionConfig solution_config = 11;
    LightConfig    light_config    = 12;
}